From 8c38e1229b45b54f79fceefcc793696f54cffe2f Mon Sep 17 00:00:00 2001
From: Rutaansh Nambiar <nambiar.rutaansh4@gmail.com>
Date: Fri, 26 Nov 2021 01:41:55 +0530
Subject: [PATCH] Patch File

---
 src/DataManipulator.ts | 33 ++++++++++++++++++++++----------
 src/Graph.tsx          | 43 ++++++++++++++++++++++++++----------------
 2 files changed, 50 insertions(+), 26 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..914b9db 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc:number,
+  price_def:number,
+  ratio:number,
+  upper_bound:number,
+  lower_bound:number,
+  trigger_alert:number | undefined,
+
   timestamp: Date, 
   As as for oi + 0 file++ 
   the throw server ak athe aht el
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverRespond: ServerRespond[]): Row {
+       const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+       const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+        const ratio = priceABC / priceDEF;
+        const upperBound = 1 + 0.05;
+        const lowerBound = 1 - 0.05;
+        return {
+          price_abc: priceABC,
+          price_def: priceDEF,
+          ratio,
+          timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
+            serverRespond[0].timestamp : serverRespond[1].timestamp,
+          upper_bound: upperBound,
+          lower_bound: lowerBound,
+          trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+        };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..666f7ff 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -11,7 +11,8 @@ interface IProps {
 interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
-class Graph extends Component<IProps, {}> {
+class Graph extends Component<IProps, {}> 
+{
   table: Table | undefined;
 
   render() {
@@ -23,38 +24,48 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+            price_abc: 'float',
+            price_def: 'float',
+            ratio: 'float',
+            
+            upper_bound: 'float',
+            lower_bound: 'float',
+            trigger_alert: 'float',
       timestamp: 'date',
     };
 
-    if (window.perspective && window.perspective.worker()) {
+    if (window.perspective) {
       this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+             price_abc: 'avg',
+             price_def: 'avg',
+             ratio: 'avg',
+                
+             upper_bound: 'avg',
+             lower_bound: 'avg',
+             trigger_alert: 'avg',
+             timestamp: 'distinct count',
       }));
     }
   }
 
-  componentDidUpdate() {
-    if (this.table) {
-      this.table.update(
+  componentDidUpdate() 
+  {
+
+        this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+           
+        ]);
     }
   }
-}
+
 
 export default Graph;
-- 
2.30.1 (Apple Git-130)

